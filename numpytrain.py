# -*- coding: utf-8 -*-
"""numpyTrain.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YKWh3HPhtLSBIEkdsZCep2fWe5Oh56vf
"""

import numpy as np
lsq = [1,2,3,4]
lsq

a = np.array([1,2,3,4,5.9])

b = np.array([[1,2,3,4,5], [6,7,8,9,10], [11, 12, 13, 14, 15]])

type(a)
# know datatype ofarray

print(a.size)
print(b.size)
# knwo size of the array

print(a.shape)
print(b.shape)
#know dimensions of the array

print(a.dtype)#know datatype of array elements
b

b.transpose()#transpose
b

np.empty((4, 4), dtype=float)
# mp.empty(r, c, dtype) generate arrasy

x=np.ones((3,5))#3 rows 5 cols float is default
x

y=np.ones(7, dtype=int)
y

z = np.zeros((4, 8))
z

z = np.ones(5, dtype=str)
z

z = np.ones(5, dtype=bool)
z

#arange(start, end, step)
a = np.arange(1, 20)
print(a)

a = np.arange(2, 20, 2)
a

# a.reshape((rows, cols))
a=a.reshape((3,3))
a

b = np.arange(1, 100, 2)
b

b = b.reshape((10,5))
b

#flatten reshape to 1d
a = b.flatten()
a

a = a.ravel()
a

# //ravel is faster than flatten as it does not occupy memory it points to addresss of original array
# //flatten modieifes copy of the array

####numpy array slicing
a = np.arange(1, 51)
a = a.reshape((10,5))
a

a[0]

a[1,2]

a[2:5]

a[0:10]

a[:, 2] #all the elems of the second column

a[2:5, 4]

a[:,:] #all rows and all columns

a[:, 2:4]

a[:,2:5].dtype

###numpy mathematical operations
a = np.arange(0,18).reshape((6,3))
b = np.arange(20, 38).reshape((6,3))
print(a)
print(b)

a+b

np.add(a, b)

np.subtract(a,b)

a*b #a[0]*a[b] dot prodcut

np.multiply(a,b)

np.divide(a,b)

a@b #matrix multiplication does not happen because m*n n*m is not here

b = b.reshape((3,6))

print(a)
print(b)

a@b

a.dot(b) #same

a.min()#gives min in array
b.max()#max in array
b.argmax()#index of max element

np.sum(b)# sum of all elements in the array

np.sum(b, axis=1)#axis=1 means rows meaning sum of rows

np.mean(b)

np.sum(b, axis=0)#axis=0 means columns meaning sum of columns

np.sqrt(b)

np.std(b)

np.log(b)#gives log of all elments and gives output